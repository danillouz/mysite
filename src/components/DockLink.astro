---
interface Props {
  href: string
  title: string
  children: any
  class?: string
}

const { href, title, class: className } = Astro.props

let isActive = false
if (href) {
  const { pathname } = Astro.url
  if (href === "/") {
    isActive = pathname === href
  } else {
    isActive = pathname.includes(href)
  }
}
---

<div class="relative">
  <div class="flex flex-col items-center justify-center">
    <div class="relative flex">
      <a
        href={href}
        title={title}
        aria-current={isActive ? "page" : undefined}
        class:list={[
          // Base styles.
          "nav-text focusable rounded-full m-1",

          "flex items-center justify-center w-12 h-12 rounded-full bg-danos-secondary dark:bg-danos-secondary-inverted ring-1 ring-danos-primary dark:ring-danos-primary-inverted",

          // Custom styles.
          className,
        ]}
      >
        <slot />
      </a>

      <div
        class:list={[
          // Base styles.
          "hidden xl:block absolute inset-y-0 right-0 my-auto -mr-[1.0625rem] w-1 h-1 rounded-full",

          {
            // Active styles.
            "bg-danos-primary-inverted dark:bg-danos-primary": isActive,
          },
        ]}
      >
      </div>
    </div>

    <span class="inline-block mb-2 xl:mb-0 nav-text">{title}</span>
  </div>

  <div
    class:list={[
      // Base styles.
      "xl:hidden absolute inset-x-0 bottom-0 mx-auto -mb-[0.1875rem] w-1 h-1 rounded-full",

      {
        // Active styles.
        "bg-danos-primary-inverted dark:bg-danos-primary": isActive,
      },
    ]}
  >
  </div>
</div>
