---
import PageLayout from "@layouts/Page.astro"
import Window from "@components/Window.astro"
import Time from "@components/Time.astro"
import Tag from "@components/Tag.astro"

import type { Frontmatter } from "@types"

interface Props {
  frontmatter: Frontmatter
  children: any
}

const {
  frontmatter: {
    title,
    description,
    tags,
    publishedAt,
    updatedAt,
    heroImage,
    heroImageAlt,
    readingTime,
  },
} = Astro.props
---

<PageLayout title={title} description={description}>
  <Window
    tabs={[
      { href: "/posts", title: "Posts" },
      { href: "/posts/tags", title: "Tags" },
      { title: `Posts > ${title}`, isActive: true },
    ]}
  >
    <div class="page-wrapper">
      <article class="mx-auto max-w-2xl">
        <header class="flex flex-col">
          <h1 class="page-heading mt-6">
            {title}
          </h1>

          <p class="order-first text-base page-subtext">
            {
              publishedAt && (
                <>
                  <Time datetime={publishedAt} /> &bull;
                </>
              )
            }

            {readingTime}

            {
              updatedAt && (
                <>
                  &bull; last updated <Time datetime={updatedAt} />
                </>
              )
            }
          </p>
        </header>

        <div
          class="mt-8 prose prose-zinc prose-headings:font-serif dark:prose-invert"
        >
          <p>{description}</p>

          <div class="not-prose">
            <ul class="list-none flex flex-wrap items-center gap-2">
              {
                tags.map((tag) => {
                  return (
                    <li class="flex">
                      <Tag name={tag}>{tag}</Tag>
                    </li>
                  )
                })
              }
            </ul>
          </div>

          {
            heroImage ? (
              <img
                width={720}
                height={360}
                src={heroImage}
                alt={heroImageAlt}
              />
            ) : (
              <hr />
            )
          }

          <slot />
        </div>
      </article>
    </div>

    <div
      slot="footer"
      class="flex-1 flex items-center flex-row-reverse gap-5 px-2"
    >
      <div class="flex items-center gap-1 truncate">
        <span class="inline-block">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 20 20"
            fill="currentColor"
            class="w-4 h-4"
          >
            <path
              fill-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zm.75-13a.75.75 0 00-1.5 0v5c0 .414.336.75.75.75h4a.75.75 0 000-1.5h-3.25V5z"
              clip-rule="evenodd"></path>
          </svg>
        </span>

        <span class="inline-block truncate" title={readingTime}
          >{readingTime}</span
        >
      </div>
    </div>
  </Window>
</PageLayout>
