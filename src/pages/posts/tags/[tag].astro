---
import PageLayout from "@layouts/Page.astro"

import type { MDXInstance } from "astro"
import type { Frontmatter } from "@types"

interface Props {
  posts: MDXInstance<Frontmatter>[]
}

export async function getStaticPaths({}) {
  const posts = await Astro.glob<Frontmatter>("../*.mdx")
  const tags = posts.map((p) => p.frontmatter.tags ?? []).flat()
  const uniqueTags = Array.from(new Set(tags))
  return uniqueTags.map((tag) => {
    return {
      params: {
        tag,
      },
      props: {
        posts: posts.filter((post) => {
          const { tags = [] } = post.frontmatter
          return tags.includes(tag)
        }),
      },
    }
  })
}

const { tag } = Astro.params
const { posts } = Astro.props
---

<PageLayout title={`Dan's posts: ${String(tag)}`}>
  <section
    class="mx-auto px-6 my-10 sm:my-20 prose sm:prose-lg prose-slate prose-headings:font-serif dark:prose-invert"
  >
    <h1>Posts &gt; tags &gt; {tag}</h1>

    <p>
      <a href="/posts/tags">All tags</a>
    </p>

    <ul>
      {
        posts.map((post) => {
          const {
            url,
            frontmatter: { title, publishedAt, readingTime },
          } = post
          return (
            <li>
              <a href={url}>{title}</a>
              {publishedAt && (
                <time datetime={publishedAt}>
                  {new Date(publishedAt).toLocaleDateString("en-us", {
                    day: "numeric",
                    month: "short",
                    year: "numeric",
                  })}
                </time>
              )}
              ({readingTime})
            </li>
          )
        })
      }
    </ul>
  </section>
</PageLayout>
