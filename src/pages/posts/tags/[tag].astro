---
import PostsPreview from "@components/PostsPreview.astro"
import Window from "@components/Window.astro"
import * as config from "@config"
import PageLayout from "@layouts/Page.astro"
import { sortPostsRecentlyPublished } from "@utils/posts"
import { getAlphabeticallySortedTagsFromPosts } from "@utils/tags"
import { getCollection } from "astro:content"

import type { CollectionEntry } from "astro:content"

interface Props {
  posts: CollectionEntry<"posts">[]
}

export async function getStaticPaths() {
  const posts = await getCollection("posts")
  const postsSorted = sortPostsRecentlyPublished(posts)
  const tags = getAlphabeticallySortedTagsFromPosts(posts)
  return tags.map((tag) => {
    return {
      params: {
        tag,
      },
      props: {
        posts: postsSorted.filter((post) => {
          const { tags = [] } = post.data
          return tags.includes(tag)
        }),
      },
    }
  })
}

const { tag } = Astro.params
const { posts } = Astro.props

const pageTitle = `${config.PAGES.TAG.TITLE} ${tag}`
const pageDescription = `${config.PAGES.TAG.DESCRIPTION} ${tag}`
---

<PageLayout title={pageTitle} description={pageDescription}>
  <link
    slot="rss"
    rel="alternate"
    type="application/rss+xml"
    title={pageTitle}
    href={new URL(`/posts/tags/${tag}.rss`, Astro.url)}
  />
  <link
    slot="rss"
    rel="alternate"
    type="application/feed+json"
    title={pageTitle}
    href={new URL(`/posts/tags/${tag}.json`, Astro.url)}
  />

  <Window
    tabs={[
      { href: "/posts", title: "Posts" },
      { href: "/posts/tags", title: "Tags" },
      { title: `Tags > ${tag}`, isActive: true },
    ]}
  >
    <div class="page-wrapper">
      <header class="page-header">
        <h1 class="page-heading">
          Posts tagged {tag}
        </h1>

        <p class="page-text mt-6">
          See <a class="page-link" href="/posts/tags">tags</a> to discover posts
          about other topic(s).
        </p>
      </header>

      <div class="page-content">
        <PostsPreview posts={posts} />
      </div>
    </div>

    <div
      slot="footer"
      class="flex-1 flex items-center flex-row-reverse gap-5 px-2"
    >
      <div class="flex items-center gap-1 truncate">
        <span
          class="inline-block truncate"
          title={`${posts.length} ${posts.length > 1 ? "posts" : "post"}`}
          >{posts.length} {posts.length > 1 ? "posts" : "post"}</span
        >
      </div>
    </div>
  </Window>
</PageLayout>
